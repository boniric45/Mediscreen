version: "3.4"
services:

  front:
    image: "front"
    container_name: "front"
    build:
      context: "Mediscreen_front"
      dockerfile: "Dockerfile"
    ports:
      - "80:9000"
#    mapping port 80


  patient:
      image: "patient"
      container_name: "patient"
      build:
        context: "Mediscreen_patient"
        dockerfile: "Dockerfile"
      ports:
         - "8081:8081"
      depends_on:
        - "patientsql"
        - "notes"
        - "rapport"
        - "front"

  patientsql:
    image: "postgres"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: "Mediscreen_Postgres_Database"
    restart: always
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=root"
      - "POSTGRES_DB=patientbdd"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
      - "./db.sql:/docker-entrypoint-initdb.d/db.sql"
    ports:
      - "5432:5432"


  notes:
    image: "notes"
    depends_on:
      - "mongodb"
      - "rapport"
      - "front"
    container_name: "notes"
    ports:
      - "8082:8082"
    build:
      context: "Mediscreen_notes"
      dockerfile: "Dockerfile"


  mongodb:
    image: "mongo:latest"
    container_name: "Mediscreen_Mongo_Database"
    environment:
      - "MONGO_INIT_ROOT_USERNAME:root"
      - "MONGO_INIT_ROOT_PASSWORD:rootroot"
    ports:
      - "27017:27017"
    volumes:
      - "mongodb-data:/data/mongodb"

  rapport:
    image: "rapport"
    container_name: "rapport"
    depends_on:
      - "front"
    build:
      context: "Mediscreen_rapport"
      dockerfile: "Dockerfile"
    ports:
      - "8080:8080"

volumes:
   postgres-data:
   mongodb-data:



















